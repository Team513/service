
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Hello world endpoint: get response "Hello, Stranger!"
GET http://localhost:8080/hello-world

### Hello world with a request param passed.
# When sending the request it will ask you for the name
# hitting enter will avoid passing the param, and do the default behaviour above
# @prompt name The name to display in response
GET http://localhost:8080/hello-world
    ?name={{name}}

### Save a greeting to database
@postOrderId = 1001
@postOrderContent = Hello!
POST http://localhost:8080/orders
Content-Type: application/json

{
    "id": "{{postOrderId}}",
    "content": "{{postOrderContent}}"
}

### Get all orders
GET http://localhost:8080/orders

### Get info for greeting with given content
# @prompt content Order content to look for, defaults to "Overview"
GET http://localhost:8080/info
    ?title={{content}}

### Update an existing greeting
@putOrderId = 1001
@putOrderContent = Hello again!
PUT http://localhost:8080/orders/{{putOrderId}}
Content-Type: application/json

{
    "content": "{{putOrderContent}}"
}

### Delete greeting
@deleteOrderId = 1001
DELETE http://localhost:8080/orders/{{deleteOrderId}}


# TODO add requests for your own endpoints!


### Create a new inventory item
POST http://localhost:8080/inventory
Content-Type: application/json

{
    "id": "2",
    "name": "Item A",
    "stock": 100,
    "threshold": 10
}



#### Get all inventory items
GET http://localhost:8080/inventory

#### Get inventory item by ID
# Replace `{id}` with the actual inventory item ID
GET http://localhost:8080/inventory/{id}

#### Create a new inventory item
POST http://localhost:8080/inventory
Content-Type: application/json

{
    "id": "1",
    "name": "Item A",
    "stock": 100
}

#### Update inventory stock
# Replace `{id}` with the actual inventory item ID
PUT http://localhost:8080/inventory/{id}/stock?stock=150

#### Delete inventory item
# Replace `{id}` with the actual inventory item ID
DELETE http://localhost:8080/inventory/{id}

---

### Robot Endpoints

#### Get all robots
GET http://localhost:8080/robots

#### Get robot by ID
GET http://localhost:8080/robots/{id}

#### Create a new robot
POST http://localhost:8080/robots
Content-Type: application/json

{
    "id": "101",
    "name": "Robot A",
    "status": "active"
}

#### Update robot status
PUT http://localhost:8080/robots/{id}/status?status=inactive


DELETE http://localhost:8080/robots/{id}